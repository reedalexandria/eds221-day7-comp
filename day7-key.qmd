---
title: "Joins and strings and dates"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(lubridate)
```

## Joins

```{r}
animals <- tibble::tribble(
  ~location,   ~species,  ~maturity,
   "lagoon",   "bobcat",    "adult",
    "bluff",   "coyote", "juvenile",
    "creek",      "fox",    "adult",
     "oaks", "squirrel", "juvenile",
    "bluff",   "bobcat",    "adult"
  )

sites <- tibble::tribble(
  ~location,      ~full_site_name, ~jurisdiction,
             "beach",       "Goleta Beach",     "SB City",
            "lagoon",        "UCSB Lagoon",        "UCSB",
             "bluff",       "Ellwood Mesa",     "SB City",
              "oaks", "Fremont Campground",        "USFS"
           )

```

### Mutating Joins:

#### Full join

```{r}
full_join_example1 <- full_join(animals, sites)
# you can specify the key with by = ""
full_join_example2 <- full_join(animals, sites, by = "location")
```

Example of joining when key variables have non-matching names

```{r}
sites_2 <- sites |>
  rename(loc = location)

nonmatching <- full_join(animals, sites_2, by = c("location" = "loc"))

# when the key differs by spelling 
```

#### Left join

```{r}
left_join_example <- left_join(animals, sites)
```

#### Inner join

```{r}
inner_join_example <- inner_join(animals, sites)
```

### Filtering joins:

#### Semi join

```{r}
semi_join_example <- semi_join(animals, sites)
```

#### Anti join

```{r}
anti_join_example <- anti_join(animals, sites)
```

## Dates and times with `lubridate`

### YYYY-MM-DD

```{r}
my_date1 <- "03-15-1998"
# mdy, ymd, dmy
lubridate::mdy(my_date1)

my_date2 <- "11/7/2003"
lubridate::dmy(my_date2)

my_date3 <- "08-Jun-1974"
lubridate::dmy(my_date3)

my_date4 <- "19610518"
my_real_date <- lubridate::ymd(my_date4)

#class(my_real_date) will show that the class is Date 
```

```{r}
lubridate::ymd("1942-08-30")

lubridate::mdy("09/22/84")
```

```{r}
time <- "2020-08-12 11:18"
time <- ymd_hm(time) 
time
class(time) #POSIXct

# can have time <- lubridate::ymd_hm(time)
```

#### Converting timezones 
```{r}
with_tz(time, "America/Los_Angeles")
with_tz(time, "Africa/Addis_Ababa")
```



